<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.atguigu.atcrowdfunding.manger.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="com.atguigu.atcrowdfunding.common.bean.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="loginacct" property="loginacct" jdbcType="VARCHAR" />
    <result column="userpswd" property="userpswd" jdbcType="CHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="CHAR" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.atguigu.atcrowdfunding.common.bean.User" >
    insert into t_user (id, loginacct, userpswd, 
      username, email, createtime
      )
    values (#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR}, #{userpswd,jdbcType=CHAR}, 
      #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createtime,jdbcType=CHAR}
      )
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.atguigu.atcrowdfunding.common.bean.User" >
    update t_user
    set loginacct = #{loginacct,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select id, loginacct, userpswd, username, email, createtime
    from t_user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="checkUser" resultMap="BaseResultMap" >
    select id, loginacct, userpswd, username, email, createtime
    from t_user
    where loginacct = #{loginacct}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select id, loginacct, userpswd, username, email, createtime
    from t_user
  </select>
  <select id="queryRoleByUserid" resultType="int" >
    select roleid
    from t_user_role
    where userid=#{userid}
  </select>
  
  <select id="queryPage" resultMap="BaseResultMap" >
    select id, loginacct, userpswd, username, email, createtime
    from t_user 
    <where>
    	<if test="queryText!=null">
    	loginacct like concat('%',#{queryText},'%')
    	</if>
    </where>
    order by id desc
    limit #{startindex},#{pagesize}
  </select>
  
  <select id="count" resultType="int" >
    select count(*)
    from t_user 
    <where>
    	<if test="queryText!=null">
    	loginacct like concat('%',#{queryText},'%')
    	</if>
    </where>
  </select>
  
  <insert id="addRoleById">
	<foreach collection="idList"  separator=";" item="id">
  		insert into t_user_role(userid,roleid) values(#{userid},#{id})
	</foreach>
  </insert>
  <delete id="removeRoleById">
  	<foreach collection="idList" separator=";" item="id">
  		delete from t_user_role where userid = #{userid} and roleid=#{id}
  	</foreach>
  </delete>
  
  <delete id="deleteByPrimaryKeys" parameterType="java.lang.Integer" >
	delete from 表名  where id in
    <foreach collection="array" open="(" close=")" separator="," item="id">
	    	#{id}
    </foreach>
  </delete>
  
</mapper>